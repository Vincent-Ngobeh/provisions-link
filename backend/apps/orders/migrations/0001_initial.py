# Generated by Django 5.0 on 2025-09-30 22:32

import apps.orders.models
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('buying_groups', '0002_initial'),
        ('core', '0001_initial'),
        ('products', '0001_initial'),
        ('vendors', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_number', models.CharField(default=apps.orders.models.generate_order_reference, editable=False, max_length=20, unique=True)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('vat_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('marketplace_fee', models.DecimalField(blank=True, decimal_places=2, help_text='Commission charged to vendor', max_digits=10, null=True)),
                ('vendor_payout', models.DecimalField(blank=True, decimal_places=2, help_text='Amount to be paid to vendor after commission', max_digits=10, null=True)),
                ('stripe_payment_intent_id', models.CharField(blank=True, help_text='Stripe payment intent ID', max_length=200)),
                ('delivery_notes', models.TextField(blank=True, help_text='Special delivery instructions')),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('paid', 'Paid'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('delivery_address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='core.address')),
                ('group', models.ForeignKey(blank=True, help_text='Associated buying group if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='buying_groups.buyinggroup')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='vendors.vendor')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit at time of order', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total price for this line item', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Discount applied (e.g., from group buy)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.product')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'db_table': 'order_items',
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['reference_number'], name='orders_referen_d447b0_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['buyer', 'created_at'], name='orders_buyer_i_b8ddd4_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['vendor', 'created_at'], name='orders_vendor__d42441_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status', 'created_at'], name='orders_status_11db6c_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['group'], name='orders_group_i_ac520e_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order', 'product'], name='order_items_order_i_f97371_idx'),
        ),
    ]
