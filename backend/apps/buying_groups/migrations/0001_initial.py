# Generated by Django 5.0 on 2025-09-24 22:00

import django.contrib.gis.db.models.fields
import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BuyingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center_point', django.contrib.gis.db.models.fields.PointField(geography=True, help_text='Center point of the buying group area', srid=4326)),
                ('radius_km', models.IntegerField(default=5, help_text='Radius in kilometers', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('area_name', models.CharField(help_text="Human-readable area name (e.g., 'Shoreditch area')", max_length=100)),
                ('target_quantity', models.IntegerField(help_text='Target quantity to achieve discount', validators=[django.core.validators.MinValueValidator(1)])),
                ('current_quantity', models.IntegerField(default=0, help_text='Current committed quantity', validators=[django.core.validators.MinValueValidator(0)])),
                ('min_quantity', models.IntegerField(help_text='Minimum quantity to activate group', validators=[django.core.validators.MinValueValidator(1)])),
                ('discount_percent', models.DecimalField(decimal_places=2, help_text='Discount percentage when target is reached', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('50.00'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('last_update_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('open', 'Open for commitments'), ('active', 'Target reached - will process'), ('failed', 'Failed to reach minimum'), ('completed', 'Orders processed')], default='open', max_length=20)),
            ],
            options={
                'verbose_name': 'Buying Group',
                'verbose_name_plural': 'Buying Groups',
                'db_table': 'buying_groups',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupCommitment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(help_text='Quantity committed to purchase', validators=[django.core.validators.MinValueValidator(1)])),
                ('buyer_location', django.contrib.gis.db.models.fields.PointField(geography=True, help_text="Buyer's location at time of commitment", srid=4326)),
                ('buyer_postcode', models.CharField(help_text="Buyer's postcode", max_length=10)),
                ('stripe_payment_intent_id', models.CharField(blank=True, help_text='Stripe payment intent for pre-authorization', max_length=200)),
                ('committed_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
            ],
            options={
                'verbose_name': 'Group Commitment',
                'verbose_name_plural': 'Group Commitments',
                'db_table': 'group_commitments',
                'ordering': ['-committed_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('commitment', 'New Commitment'), ('threshold', 'Threshold Reached'), ('expired', 'Group Expired'), ('cancelled', 'Commitment Cancelled'), ('status_change', 'Status Changed')], max_length=20)),
                ('event_data', models.JSONField(default=dict, help_text='Additional event data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Group Update',
                'verbose_name_plural': 'Group Updates',
                'db_table': 'group_updates',
                'ordering': ['-created_at'],
            },
        ),
    ]
