# Generated by Django 5.0 on 2025-09-30 22:32

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vendors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('display_order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
                ('description', models.TextField()),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=50, unique=True)),
                ('barcode', models.CharField(blank=True, help_text='EAN-13 barcode', max_length=13)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('vat_rate', models.DecimalField(decimal_places=2, default=Decimal('0.20'), help_text='VAT rate (0.20 = 20%)', max_digits=4)),
                ('unit', models.CharField(choices=[('kg', 'Kilogram'), ('g', 'Gram'), ('l', 'Litre'), ('ml', 'Millilitre'), ('unit', 'Unit'), ('case', 'Case'), ('box', 'Box'), ('bag', 'Bag'), ('bunch', 'Bunch')], default='unit', max_length=10)),
                ('stock_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('low_stock_threshold', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('contains_allergens', models.BooleanField(default=False)),
                ('allergen_info', models.JSONField(blank=True, default=dict, help_text='Allergen information as JSON')),
                ('allergen_statement', models.TextField(blank=True, help_text='Free text allergen statement')),
                ('primary_image', models.URLField(blank=True, help_text='Primary product image URL')),
                ('additional_images', models.JSONField(blank=True, default=list, help_text='List of additional image URLs')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='products.category')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='vendors.vendor')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=60, unique=True)),
                ('tag_type', models.CharField(choices=[('dietary', 'Dietary'), ('organic', 'Organic/Sustainable'), ('origin', 'Origin'), ('preparation', 'Preparation'), ('other', 'Other')], default='other', max_length=20)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'tags',
                'ordering': ['tag_type', 'name'],
                'indexes': [models.Index(fields=['slug'], name='tags_slug_c72f9b_idx'), models.Index(fields=['tag_type'], name='tags_tag_typ_766b27_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_tags', to='products.product')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_products', to='products.tag')),
            ],
            options={
                'verbose_name': 'Product Tag',
                'verbose_name_plural': 'Product Tags',
                'db_table': 'product_tags',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='products', through='products.ProductTag', to='products.tag'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['slug'], name='categories_slug_b4303a_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent', 'is_active'], name='categories_parent__c20446_idx'),
        ),
        migrations.AddIndex(
            model_name='producttag',
            index=models.Index(fields=['product'], name='product_tag_product_2909de_idx'),
        ),
        migrations.AddIndex(
            model_name='producttag',
            index=models.Index(fields=['tag'], name='product_tag_tag_id_b717e2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='producttag',
            unique_together={('product', 'tag')},
        ),
        migrations.AddIndex(
            model_name='product',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='products_search__7bdc4d_gin'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', '-created_at'], name='products_categor_8c32e2_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['vendor', 'stock_quantity'], name='products_vendor__230c9d_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active', 'featured'], name='products_is_acti_44d253_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='products_sku_fe2039_idx'),
        ),
    ]
