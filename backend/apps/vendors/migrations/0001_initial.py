# Generated by Django 5.0 on 2025-09-24 22:00

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(help_text='Legal business name', max_length=200, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly version of business name', max_length=250, unique=True)),
                ('description', models.TextField(blank=True, help_text='Business description')),
                ('phone_number', models.CharField(blank=True, help_text='Business contact number', max_length=17)),
                ('is_approved', models.BooleanField(default=False, help_text='Admin approval status')),
                ('fsa_verified', models.BooleanField(default=False, help_text='FSA verification completed')),
                ('stripe_onboarding_complete', models.BooleanField(default=False, help_text='Stripe Connect onboarding completed')),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, help_text='Business location coordinates', srid=4326)),
                ('postcode', models.CharField(help_text='Business postcode', max_length=10)),
                ('delivery_radius_km', models.IntegerField(default=10, help_text='Maximum delivery radius in kilometers', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('fsa_establishment_id', models.CharField(blank=True, help_text='FSA establishment ID', max_length=20, null=True)),
                ('fsa_rating_value', models.IntegerField(blank=True, help_text='FSA hygiene rating (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('fsa_rating_date', models.DateField(blank=True, help_text='Date of last FSA inspection', null=True)),
                ('fsa_last_checked', models.DateTimeField(blank=True, help_text='Last time we checked FSA API', null=True)),
                ('stripe_account_id', models.CharField(blank=True, help_text='Stripe Connect account ID', max_length=200)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=Decimal('0.10'), help_text='Marketplace commission rate (0.10 = 10%)', max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('0.50'))])),
                ('vat_number', models.CharField(blank=True, help_text='VAT registration number', max_length=20)),
                ('min_order_value', models.DecimalField(decimal_places=2, default=Decimal('50.00'), help_text='Minimum order value in GBP', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('logo_url', models.URLField(blank=True, help_text='URL to vendor logo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vendor',
                'verbose_name_plural': 'Vendors',
                'db_table': 'vendors',
                'indexes': [models.Index(fields=['slug'], name='vendors_slug_5bb22c_idx'), models.Index(fields=['is_approved', 'stripe_onboarding_complete'], name='vendors_is_appr_c65e6d_idx'), models.Index(fields=['fsa_rating_value'], name='vendors_fsa_rat_5fb09e_idx')],
            },
        ),
    ]
