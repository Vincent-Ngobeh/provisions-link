services:
  db:
    image: postgis/postgis:14-3.2
    environment:
      POSTGRES_DB: provisions_link
      POSTGRES_USER: provisions_user  
      POSTGRES_PASSWORD: provisions_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U provisions_user -d provisions_link"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: .
    command: sh -c "sleep 10 && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: provisions_link
      DB_USER: provisions_user
      DB_PASSWORD: provisions_pass
      REDIS_HOST: redis
      REDIS_PORT: 6379

volumes:
  postgres_data:
  redis_data: